{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAqCeA,MA9Bf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAIrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,eAA1B,SAA0CI,GAAjCC,QAIjB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBC+BGC,G,kNA/CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEACmCC,IAAMC,IACjD,4DAFQ,gBACcJ,EADd,EACFK,KAAQA,KAAQL,OAExB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAHzB,2C,uDAMZ,WACEQ,KAAKN,c,oBAIP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAInB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QANTmB,EAAMxB,e,GA/BT0B,IAAMC,YCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e41e8cb8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes, { arrayOf } from \"prop-types\"\r\nimport './Movie.css';\r\n//css파일을 넣어서 style 사용하는법과 js위에서 css넣는 방법\r\n\r\n\r\n//component가 state가 필요없을시 class component를 만들 이유가 없음\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        {/* 시각 장애를 가진 사람이 스크린 리더기를 사용할 때 이미지를 청각으로 전달할 때 사용됩니다.\r\n        이미지 파일이 깨질 경우 alt 속성에 적힌 이미지를 설명하는 단어를 대신 출력합니다. title을 사용해야 이미지에 커서를 갖다\r\n        댔을때 title이 보입니다.*/}\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"genres\">\r\n                {genres.map((genre, index) => (\r\n                    <li key={index} className=\"genres_genre\">{genre}</li>\r\n                ))}\r\n            </ul>\r\n            {/* map에 있는 각각 item은 key가 필요하다 */}\r\n            <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n            {/* summary.slice(start point,end point) */}\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const { data: { data: { movies } } } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false })\n    //setState({movies:movies}) 앞의 movies는 state에서 뒤에 것은 axios에서 가져온 movies =>es6버전\n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n  //componentDidMount(){setTimeout(()=>{this.setState({ isLoading : false});}, 6000);}\n\n  render() {\n    const { isLoading, movies } = this.state;\n    //es6의 마법이라던데..원래 isLoading은 정의되어 있지 않아서 this.state.isLoading 써야하지만 const{isLoaing}=this.state;로 그냥 쓸수 있다\n    //react에서 component 와 js안의 html의 class을 혼동하므로 js안의 html의 class를 표기할때 className을 써야한다\n    //console에서 element을 보면 표기는 class로 된다\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    )\n    //key는 =>arrow function을 쓰면서 return을 없애기 때문에 unique \"key\" prop이 필요해졌으므로 넣었다.\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}